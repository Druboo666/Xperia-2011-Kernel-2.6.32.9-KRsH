### LICENSE:
#
# Copyright (C) 2011 Ahmad Amarullah ( http://amarullz.com/ )
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

########################################
########################################

ini_set("text_ok", "OK");
ini_set("text_next", "Next >");
ini_set("text_back", "< Back");
ini_set("text_yes", "Yes");
ini_set("text_no", "No");
ini_set("text_about", "About");
ini_set("text_calibrating", "Calibrating Tools");
ini_set("text_quit", "Quit Boot Menu");
ini_set("text_quit_msg", "Quit and boot default ROM?");
ini_set("text_install", "Install");
ini_set("text_apply", "Apply");
ini_set("text_finish", "Finish");
ini_set("text_none", "None");
ini_set("force_colorspace","bgra");

calibrate("0.8939","43","0.9616","25");

theme("cosmicui");

fontresload( "0", "ttf/Comfortaa.ttf", "14" ); #-- small
fontresload( "1", "ttf/Comfortaa.ttf", "20" ); #-- big

########################################
########################################

if file_getprop("/cache/dorepair.prop","repair") == "sdcard";
then
    viewbox(
        "Problem Detected",
        "Your SDCard has been mounted read-only, meaning it has a damaged filesystem.\n\n"+
        "There is a chance that Slots 2 and above (if used) may not be fully repaired, in this case they will need to be reinstalled.\n\n"+
        "Press next to repair the SDCard, and attempt to repair the Slot images.\n\n\n"+
        "<b><#f55>To prevent errors to your SDCard in future, always make sure to shutdown the device CLEANLY and only pull the battery out as an extreme last resort!</#></b>",
        "@repair"
    );

    writetmpfile(
        "repairtasks.prop",
        "item.1.1=1\n"+
        "item.2.1=1\n"+
        "item.2.2=1\n"+
        "item.3.1=1\n"+
        "item.3.2=1\n"+
        "item.3.3=1\n"+
        "item.4.1=1\n"+
        "item.4.2=1\n"+
        "item.4.3=1\n"+
        "item.5.1=1\n"+
        "item.5.2=1\n"+
        "item.5.3=1\n"+
        "item.6.1=1\n"
    );

    ini_set("text_next", "Reboot");
    writetmpfile(
        "repairdo.prop",
        "do=yes\n"
    );

    writetmpfile("doslot.prop", "slot=na\n");

    install(
        "Repairing",
        "<b>Turbo Kernel</b> is now performing scans and repairing where necessary.",
        "@repair",
        "The repair process has completed. Be sure to check the log for details."
    );
    exec("sync");
    exit("");
endif;


########################################
########################################

exec("/sbin/turbo_helper.sh", "checkfresh");
if getvar("exec_buffer") == "1\n"
then
    textbox(
        "Welcome to Turbo Kernel",
        "This message will only appear once - be sure to read it!",
        "@about",
        resread("fresh.txt")
    );
endif;

########################################
##### LOAD CUSTOMIZATION
########################################

setvar("slot1icon",    file_getprop("/turbo/slot1.prop","icon"));
setvar("slot1text",    file_getprop("/turbo/slot1.prop","text"));

setvar("slot2icon",    file_getprop("/turbo/slot2.prop","icon"));
setvar("slot2text",    file_getprop("/turbo/slot2.prop","text"));

setvar("slot3icon",    file_getprop("/turbo/slot3.prop","icon"));
setvar("slot3text",    file_getprop("/turbo/slot3.prop","text"));

setvar("slot4icon",    file_getprop("/turbo/slot4.prop","icon"));
setvar("slot4text",    file_getprop("/turbo/slot4.prop","text"));

exec("/sbin/turbo_helper.sh", "checkdefault");
if getvar("exec_buffer") == "1\n" then 
    setvar("slot1default", "[Default]"); 
    setvar("slot2default", "");
    setvar("slot3default", "");
    setvar("slot4default", "");
endif;
if getvar("exec_buffer") == "2\n" then 
    setvar("slot1default", "");
    setvar("slot2default", "[Default]");
    setvar("slot3default", "");
    setvar("slot4default", "");
endif;
if getvar("exec_buffer") == "3\n" then 
    setvar("slot1default", "");
    setvar("slot2default", "");
    setvar("slot3default", "[Default]"); 
    setvar("slot4default", "");
endif;
if getvar("exec_buffer") == "4\n" then 
    setvar("slot1default", "");
    setvar("slot2default", "");
    setvar("slot3default", "");
    setvar("slot4default", "[Default]"); 
endif;

if file_getprop("/cache/turbo.recovery","recovery") == "cwm";
then
    setvar("rec", "CWM");
    setvar("recicon", "@cwm");
else
    setvar("rec", "TWRP");
    setvar("recicon", "@twrp");
endif;


########################################
##### MAIN MENU
########################################

menubox("Turbo Boot Menu",
            "Please select your choice.",
            "@cog",
            "systemselect.prop",
            "(1) First/Internal slot "  + getvar("slot1default"),  getvar("slot1text"),                             getvar("slot1icon"),
            "(2) Second slot "          + getvar("slot2default"),  getvar("slot2text"),                             getvar("slot2icon"),
            "(3) Third slot "           + getvar("slot3default"),  getvar("slot3text"),                             getvar("slot3icon"),
            "(4) Fourth slot "          + getvar("slot4default"),  getvar("slot4text"),                             getvar("slot4icon"),
            "Settings and Tools",                                  "Maintenance, customization and more",           "@cog",
            "About",                                               "Information and credits about the kernel",      "@about"
);



########################################
##### SLOT MENU
########################################

if prop("systemselect.prop","selected")=="1" then
    setvar("currentslot", "1");    
    menubox(
        getvar("slot1text"),
        "What do you want to do?",
        getvar("slot1icon"),
        "systemtask.prop",
            "Boot",                         "Boot " + getvar("slot1text") + " now",                                    "@slot1",
            getvar("rec") + " Recovery",    "Enter " + getvar("rec") + " Recovery now",                                getvar("recicon"),
            "Fix Wifi",                     "Force a Wifi module install if you have issues",                          "@wifi",
            "Change Slot Mode",             "Current Slot Mode is " + file_getprop("/turbo/slot1mode.prop","mode"),    "@android",
            "Tweaks and Mods",              "Various things for your hacking pleasure",                                "@customize"
    );
endif;

if prop("systemselect.prop","selected")=="2" then
    setvar("currentslot", "2");    
    exec("/sbin/turbo_helper.sh", "checkslot", "2");
    if getvar("exec_buffer") == "0\n"
    then
        menubox(
            getvar("slot2text"),
            "What do you want to do?",
            getvar("slot2icon"),
            "systemtask.prop",
                "Boot",                         "Boot " + getvar("slot2text") + " now",                                    "@slot2",
                getvar("rec") + " Recovery",    "Enter " + getvar("rec") + " Recovery now",                                getvar("recicon"),
                "Fix Wifi",                     "Force a Wifi module install if you have issues",                          "@wifi",
                "Change Slot Mode",             "Current Slot Mode is " + file_getprop("/turbo/slot2mode.prop","mode"),    "@android",
                "Tweaks and Mods",              "Various things for your hacking pleasure",                                "@customize"
        );
    endif;
endif;

if prop("systemselect.prop","selected")=="3" then
    setvar("currentslot", "3");    
    exec("/sbin/turbo_helper.sh", "checkslot", "3");
    if getvar("exec_buffer") == "0\n"
    then
        menubox(
            getvar("slot3text"),
            "What do you want to do?",
            getvar("slot3icon"),
            "systemtask.prop",
                "Boot",                         "Boot " + getvar("slot3text") + " now",                                    "@slot3",
                getvar("rec") + " Recovery",    "Enter " + getvar("rec") + " Recovery now",                                getvar("recicon"),
                "Fix Wifi",                     "Force a Wifi module install if you have issues",                          "@wifi",
                "Change Slot Mode",             "Current Slot Mode is " + file_getprop("/turbo/slot3mode.prop","mode"),    "@android",
                "Tweaks and Mods",              "Various things for your hacking pleasure",                                "@customize"
        );
    endif;
endif;

if prop("systemselect.prop","selected")=="4" then
    setvar("currentslot", "4");
    exec("/sbin/turbo_helper.sh", "checkslot", "4");
    if getvar("exec_buffer") == "0\n"
    then
        menubox(
            getvar("slot4text"),
            "What do you want to do?",
            getvar("slot4icon"),
            "systemtask.prop",
                "Boot",                         "Boot " + getvar("slot4text") + " now",                                    "@slot4",
                getvar("rec") + " Recovery",    "Enter " + getvar("rec") + " Recovery now",                                getvar("recicon"),
                "Fix Wifi",                     "Force a Wifi module install if you have issues",                          "@wifi",
                "Change Slot Mode",             "Current Slot Mode is " + file_getprop("/turbo/slot4mode.prop","mode"),    "@android",
                "Tweaks and Mods",              "Various things for your hacking pleasure",                                "@customize"
        );
    endif;
endif;



########################################
##### SLOT TASK
########################################

##########
# Boot
if prop("systemtask.prop","selected")=="1" then
    write("/cache/multiboot" + getvar("currentslot"),"1");
    exec("sync");
    ini_set("force_colorspace", "argb");
    exit("");
endif;

##########
# Recovery
if prop("systemtask.prop","selected")=="2" then
        write("/tmp/bootrec","1");
        write("/tmp/recslot", "FSTAB=/recovery" + getvar("currentslot") + ".fstab");
        exec("sync");
        exit("");
endif;

##########
# Wifi
if prop("systemtask.prop","selected")=="3" then
    pleasewait("Copying Wifi module to Slot " + getvar("currentslot") + " ...");
    if getvar("currentslot")=="1" then
        exec("mount","-t","yaffs2","/dev/block/mtdblock0","/system");
    else
        exec("mount", "-w", "-t", "ext2", "/turbo/system" + getvar("currentslot") + ".ext2.img", "/system");
    endif;
    exec("mkdir", "-p", "/system/lib/modules");
    exec("cp", "-f", "/modules/bcm4329.ko", "/system/lib/modules/bcm4329.ko");
    exec("chmod","664", "/system/lib/modules/bcm4329.ko");
    exec("sync");
    exec("umount", "/system");
    alert("Fix Wifi","The Wifi module has been forcibly installed to Slot " + getvar("currentslot") + ".\n\nPress OK to return to the main menu.", "@cog");
    back("999");
endif;

##########
# Mode
if prop("systemtask.prop","selected")=="4" then
    menubox(
        "Slot Mode",
        "Select the type of ROM that will be (or already is) installed to this slot. Currently set to " + file_getprop("/turbo/slot" + getvar("currentslot") + "mode.prop","mode") + ".",
        "@android",
        "mode.prop",
            "JB-AOSP",          "Jellybean ROM's based on AOSP (Default)",                  "@jellyzeus",
            "ICS-AOSP",         "Ice Cream Sandwich ROM's based on AOSP (e.g. CM9, AOKP)",  "@cm10"
    );
    
    if prop("mode.prop","selected")=="1" then
        write("/turbo/slot" + getvar("currentslot") + "mode.prop", "mode=JB-AOSP\n");
    endif;
    
    if prop("mode.prop","selected")=="2" then
        write("/turbo/slot" + getvar("currentslot") + "mode.prop", "mode=ICS-AOSP\n");
    endif;
    
    back("1");
endif;

##########
# Tweaks
if prop("systemtask.prop","selected")=="5" then
    exec("/sbin/turbo_helper.sh", "checktsdx", getvar("currentslot"));
    # above helper function will mount correct system/data partition
    exec("/sbin/turbo_helper.sh", "checkurandom");
    exec("/sbin/turbo_helper.sh", "checkdeasec");
    exec("/sbin/turbo_helper.sh", "checkusb");
    
    menubox("Tweaks and Mods",
            "Please select the task you wish to perform.",
            "@customize",
            "tweaksmods.prop",
            file_getprop("/tmp/tsdxstatus.prop","task") + " TSDX",  "TSDX - Native, robust sd-ext solution (select for more info)", "@about",
            file_getprop("/tmp/urandomstatus.prop","title"),        file_getprop("/tmp/urandomstatus.prop","text"),                 "@disk",
            file_getprop("/tmp/deasecstatus.prop","title"),         file_getprop("/tmp/deasecstatus.prop","text"),                  "@android",
            file_getprop("/tmp/usbstatus.prop","title"),            file_getprop("/tmp/usbstatus.prop","text"),                     "@disk"
    );
    
    if prop("tweaksmods.prop","selected")=="1" then
        if file_getprop("/tmp/tsdxstatus.prop","task") == "Install" then
            textbox(
                "TSDX Installation",
                "Turbo SD-eXt is a robust and reliable set-and-forget sd-ext solution.",
                "@about",
                resread("tsdx_install.txt")
            );
    
            exec("/sbin/turbo_helper.sh", "settsdx", file_getprop("/tmp/tsdxstatus.prop","task"));
            
            viewbox(
                "TSDX Installation",
                "Turbo SD-eXt has been enabled.\n\n" +
                "The mentioned data will be moved on the next boot of this slot.\n"+
                "If there is no data existing on this slot (i.e. you have not booted it yet), you will need to reboot the slot again to apply.",
            "@about"
            );
        endif;
        
        if file_getprop("/tmp/tsdxstatus.prop","task") == "Remove" then
            textbox(
                "TSDX Removal",
                "Remove Turbo SD-eXt from this slot",
                "@about",
                resread("tsdx_remove.txt")
            );

            pleasewait("Removing TSDX...");
            exec("/sbin/turbo_helper.sh", "settsdx", file_getprop("/tmp/tsdxstatus.prop","task"), getvar("currentslot"));

            selectbox(
                "TSDX - Clean sd-ext?",
                "Do you want to clean the TSDX data on sd-ext?",
                "@disk",
                "tsdxclean.prop",
                "No",  "Keep TSDX data on sd-ext - You will still use TSDX on other slots, or just want to keep it.",   1,
                "Yes", "Remove TSDX data on sd-ext - Don't keep anything on sd-ext. " + 
                            "ONLY SELECT THIS IF TSDX IS DISABLED ON ALL SLOTS.",  0
            );

            if prop("tsdxclean.prop","selected.0")=="2" then
                pleasewait("Cleaning sd-ext...");
                exec("/sbin/turbo_helper.sh", "settsdx", "clean");
            endif;
            
            viewbox(
                "TSDX Removal",
                "Turbo SD-eXt has been removed.\n\n" +
                "If you have used Data2SD in Titanium Backup, the data has not been touched (it's at /sd-ext/data2). You can re-use this data in Titanium Backup when needed, or erase it yourself.",
            "@about"
            );
        endif;
    exec("sync");
    exec("umount", "/data");
    exec("umount", "/system");
    back("999");
    endif;
    
    if prop("tweaksmods.prop","selected")=="2" then
        exec("/sbin/turbo_helper.sh", "seturandom", file_getprop("/tmp/urandomstatus.prop","task"));
    endif;
    
    if prop("tweaksmods.prop","selected")=="3" then
        exec("/sbin/turbo_helper.sh", "setdeasec", file_getprop("/tmp/deasecstatus.prop","task"));
    endif;
    
    if prop("tweaksmods.prop","selected")=="4" then
        exec("/sbin/turbo_helper.sh", "setusb", file_getprop("/tmp/usbstatus.prop","task"));
    endif;
    
    exec("sync");
    exec("umount", "/data");
    exec("umount", "/system");
    back("1");
endif;



########
# TOOLS
########

if prop("systemselect.prop","selected")=="5" then
    menubox("Tools",
            "Please select the task you wish to perform.",
            "@cog",
            "toolselect.prop",
            "Default Slot",         "Change the default slot for automatic booting",         "@disk",
            "Recovery Selection",   "Current recovery is " + getvar("rec") + ".",            getvar("recicon"),
            "Repair",               "Perform a range of repair function for any slot",       "@repair",
            "Customize",            "Change the icon and text label for any slot",           "@customize",
            "Delete Slot",          "Delete a Slot from SDCard",                             "@warning"
    );

    ##########
    # Recovery
    if prop("toolselect.prop","selected")=="2" then
    menubox(
        "Recovery Selection",
        "Select the Recovery you wish to use. Currently set to " + getvar("rec") + ". After selection, Boot Menu must reboot.",
        getvar("recicon"),
        "rec.prop",
            "TWRP",   "Switch to TWRP (Default)",   "@twrp",
            "CWM",    "Switch to CWM",              "@cwm"
    );
    
    if prop("rec.prop","selected")=="1" then
        write("/cache/turbo.recovery", "recovery=twrp\n");
    endif;
    
    if prop("rec.prop","selected")=="2" then
        write("/cache/turbo.recovery", "recovery=cwm\n");
    endif;
    
    exec("mkdir", "/cache/recovery");
    write("/cache/recovery/boot", "1\n");
    
    exec("sync");
    exit("");
endif;

    
    ##########
    # Default
    if prop("toolselect.prop","selected")=="1" then
        if getvar("slot1default") == "[Default]" then 
            setvar("currentdefault", "Slot 1");
            setvar("slot1default", "[Current]");
        endif;
        if getvar("slot2default") == "[Default]" then 
            setvar("currentdefault", "Slot 2"); 
            setvar("slot2default", "[Current]"); 
        endif;
        if getvar("slot3default") == "[Default]" then 
            setvar("currentdefault", "Slot 3"); 
            setvar("slot3default", "[Current]"); 
        endif;
        if getvar("slot4default") == "[Default]" then 
            setvar("currentdefault", "Slot 4"); 
            setvar("slot4default", "[Current]"); 
        endif;
        
        menubox("Default Slot",
            "Select your desired default slot. The current default is " + getvar("currentdefault") + ".",
            "@disk",
            "newdefault.prop",
            "(1) First/Internal slot "  + getvar("slot1default"),  getvar("slot1text"),                             getvar("slot1icon"),
            "(2) Second slot "          + getvar("slot2default"),  getvar("slot2text"),                             getvar("slot2icon"),
            "(3) Third slot "           + getvar("slot3default"),  getvar("slot3text"),                             getvar("slot3icon"),
            "(4) Fourth slot "          + getvar("slot4default"),  getvar("slot4text"),                             getvar("slot4icon")
        );

        exec("/sbin/turbo_helper.sh", "setdefaultslot", prop("newdefault.prop","selected"));

        back("999");
    endif;
       
    ##########
    # Repair
    if prop("toolselect.prop","selected")=="3" then
        menubox("Repair",
            "Please select your desired repair function",
            "@repair",
            "repairmode.prop",
            "Full",        "(Recommended) Perform full repairs where appropriate",                         "@repair",
            "Custom",      "(Advanced) Allows experienced users to select which repair tasks they desire", "@repair2"
        );

        if prop("repairmode.prop","selected")=="2" then
            checkbox(
                "Advanced Repair",
                "Select the repair tasks you wish to perform on this run. If the Slot does not exist but it selected, it will be skipped during the run.",
                "@repair2",
                "repairtasks.prop",
                    "Internal Partitions",        "",                                                          2,  #-- Group 1. key = "item.1.x"
                    "Fix Permissions",            "Fix permissions on Userdata",                               1,      #-- item.1.1  = 1
                    "microSD",                    "",                                                          2,  #-- Group 2. key = "item.2.x"
                    "Scan and repair FAT32",      "Repair errors on the /sdcard mount.",                       1,      #-- item.2.1  = 1
                    "Scan and repair sd-ext",     "Repair errors on the /sd-ext mount",                        1,      #-- item.2.2  = 1
                    "Slot 2",                     "",                                                          2,  #-- Group 3. key = "item.3.x"
                    "Scan and repair system",     "Repair errors on the system ext2 image for Slot 2",         1,      #-- item.3.1  = 1
                    "Scan and repair userdata",   "Repair errors on the userdata ext2 image for Slot 2",       1,      #-- item.3.2  = 1
                    "Fix Permissions",            "Fix permissions on Userdata for Slot 2",                    1,      #-- item.3.3  = 1
                    "Slot 3",                     "",                                                          2,  #-- Group 4. key = "item.4.x"
                    "Scan and repair system",     "Repair errors on the system ext2 image for Slot 3",         1,      #-- item.4.1  = 1
                    "Scan and repair userdata",   "Repair errors on the userdata ext2 image for Slot 3",       1,      #-- item.4.2  = 1
                    "Fix Permissions",            "Fix permissions on Userdata for Slot 3",                    1,      #-- item.4.3  = 1
                    "Slot 4",                     "",                                                          2,  #-- Group 5. key = "item.5.x"
                    "Scan and repair system",     "Repair errors on the system ext2 image for Slot 4",         1,      #-- item.5.1  = 1
                    "Scan and repair userdata",   "Repair errors on the userdata ext2 image for Slot 4",       1,      #-- item.5.2  = 1
                    "Fix Permissions",            "Fix permissions on Userdata for Slot 4",                    1,      #-- item.5.3  = 1
                    "Other",                      "",                                                          2,  #-- Group 6. key = "item.6.x"
                    "Save logs",                  "Save the scan/repair log to turbo_repair.log on microSD",   1       #-- item.6.1  = 1
            );
        endif; 
   
        # Set defaults for Full repair (everything on)
        if prop("repairmode.prop","selected")=="1" then
        writetmpfile(
            "repairtasks.prop",
            "item.1.1=1\n"+
            "item.2.1=1\n"+
            "item.2.2=1\n"+
            "item.3.1=1\n"+
            "item.3.2=1\n"+
            "item.3.3=1\n"+
            "item.4.1=1\n"+
            "item.4.2=1\n"+
            "item.4.3=1\n"+
            "item.5.1=1\n"+
            "item.5.2=1\n"+
            "item.5.3=1\n"+
            "item.6.1=1\n"
        );
        endif; 

        ini_set("text_next", "Repair");
   
        viewbox(
       "About to Repair",
       "\nThe repair process will begin once you press Repair. This process may take some time.",
       "@repair"
        );

        ini_set("text_next", "Reboot");
        writetmpfile(
            "repairdo.prop",
            "do=yes\n"
        );
        
        writetmpfile("doslot.prop", "slot=na\n");
   
        install(
            "Repairing",
            "<b>Turbo Kernel</b> is now performing scans and repairing where necessary.",
            "@repair",
            "The repair process has completed. Be sure to check the log for details."
        );
        exec("sync");
        exit("");
    endif;
    
    ##########
    # Customize
    if prop("toolselect.prop","selected")=="4" then
        menubox("Customze",
            "Please select the slot you wish to customize.",
            "@customize",
            "systemcustomize.prop",
            "(1) First/Internal slot ",  getvar("slot1text"),                             getvar("slot1icon"),
            "(2) Second slot ",          getvar("slot2text"),                             getvar("slot2icon"),
            "(3) Third slot ",           getvar("slot3text"),                             getvar("slot3icon"),
            "(4) Fourth slot ",          getvar("slot4text"),                             getvar("slot4icon")
        );
        setvar("slotcustomize", prop("systemcustomize.prop","selected"));
        menubox("Customze",
            "Please select the icon and text you want to place in slot " + prop("systemcustomize.prop","selected") + ".",
            "@customize",
            "slotcustomizeentry.prop",
            "Turbo UI",    "Boot Turbo UI in Slot "        + prop("systemcustomize.prop","selected"),    "@turbo",
            "SlimBean",    "Boot SlimBean in Slot "        + prop("systemcustomize.prop","selected"),    "@slimbean",
            "P.A.C. Man",  "Boot P.A.C. Man in Slot "      + prop("systemcustomize.prop","selected"),    "@pac",
            "Jellyzeus",   "Boot Jellyzeus in Slot "       + prop("systemcustomize.prop","selected"),    "@jellyzeus",
            "CyanogenMod", "Boot CyanogenMod in Slot "     + prop("systemcustomize.prop","selected"),    "@cm10",
            "None/Other",  "Slot "                         + prop("systemcustomize.prop","selected"),    "@slot1"
        );
        
        if prop("slotcustomizeentry.prop","selected")=="1" then
            write("/turbo/slot" + prop("systemcustomize.prop","selected") + ".prop", 
                "icon=@turbo\n"+
                "text=Turbo UI in Slot " + prop("systemcustomize.prop","selected") + "\n"
            );
        endif;
        if prop("slotcustomizeentry.prop","selected")=="2" then
            write("/turbo/slot" + prop("systemcustomize.prop","selected") + ".prop", 
                "icon=@slimbean\n"+
                "text=SlimBean in Slot " + prop("systemcustomize.prop","selected") + "\n"
            );
        endif;
        if prop("slotcustomizeentry.prop","selected")=="3" then
            write("/turbo/slot" + prop("systemcustomize.prop","selected") + ".prop", 
                "icon=@pac\n"+
                "text=P.A.C. Man in Slot " + prop("systemcustomize.prop","selected") + "\n"
            );
        endif;
        if prop("slotcustomizeentry.prop","selected")=="4" then
            write("/turbo/slot" + prop("systemcustomize.prop","selected") + ".prop", 
                "icon=@jellyzeus\n"+
                "text=Jellyzeus in Slot " + prop("systemcustomize.prop","selected") + "\n"
            );
        endif;
        if prop("slotcustomizeentry.prop","selected")=="5" then
            write("/turbo/slot" + prop("systemcustomize.prop","selected") + ".prop", 
                "icon=@cm10\n"+
                "text=CyanogenMod in Slot " + prop("systemcustomize.prop","selected") + "\n"
            );
        endif;
        if prop("slotcustomizeentry.prop","selected")=="6" then
            write("/turbo/slot" + prop("systemcustomize.prop","selected") + ".prop", 
                "icon=@slot1\n"+
                "text=Slot " + prop("systemcustomize.prop","selected") + "\n"
            );
        endif;
        back("999");
    endif;

    ##########
    # Delete Slot
    if prop("toolselect.prop","selected")=="5" then
        menubox("Delete Slot",
            "Select the Slot to delete. The delete will remove both system and userdata images from SDCard and clear all settings for it. In the case of Slot 1, it will just remove Boot settings.",
            "@warning",
            "slotdelete.prop",
            "(1) First/Internal slot ", getvar("slot1text"),  getvar("slot1icon"),
            "(2) Second slot ",         getvar("slot2text"),  getvar("slot2icon"),
            "(3) Third slot ",          getvar("slot3text"),  getvar("slot3icon"),
            "(4) Fourth slot ",         getvar("slot4text"),  getvar("slot4icon")
        );
        
        ini_set("text_next", "Delete");
        
        if prop("slotdelete.prop","selected")!="1" then
            viewbox(
                "Delete Slot " + prop("slotdelete.prop","selected"),
                "Are you sure you wish to delete Slot " + prop("slotdelete.prop","selected") + "?\n\n"+
                    "These files will be <b>deleted</b> from the SDCard:\n"+
                    " - /turbo/system" + prop("slotdelete.prop","selected") + ".ext2.img\n"+
                    " - /turbo/userdata" + prop("slotdelete.prop","selected") + ".ext2.img\n\n"+
                    "Additionally, Boot Menu settings will be set back to defaults. This includes the custom icon/text and the Mode.",
                "@warning"
            );
        endif;
        
        if prop("slotdelete.prop","selected")=="1" then
            viewbox(
                "Clear Slot 1 (Internal)",
                "Are you sure you wish to clear Boot Menu settings for the Internal ROM (Slot 1) and return to defaults?\n\n"+
                    "This includes the custom icon/text and the Mode.",
                "@warning"
            );
        endif;
        
        exec("rm", "-f", "/turbo/system" + prop("slotdelete.prop","selected") + ".ext2.img");
        exec("rm", "-f", "/turbo/userdata" + prop("slotdelete.prop","selected") + ".ext2.img");
        exec("/sbin/turbo_helper.sh", "clearslot", prop("slotdelete.prop","selected"));
        
        setvar("slot1icon",    file_getprop("/turbo/slot1.prop","icon"));
        setvar("slot1text",    file_getprop("/turbo/slot1.prop","text"));

        setvar("slot2icon",    file_getprop("/turbo/slot2.prop","icon"));
        setvar("slot2text",    file_getprop("/turbo/slot2.prop","text"));

        setvar("slot3icon",    file_getprop("/turbo/slot3.prop","icon"));
        setvar("slot3text",    file_getprop("/turbo/slot3.prop","text"));

        setvar("slot4icon",    file_getprop("/turbo/slot4.prop","icon"));
        setvar("slot4text",    file_getprop("/turbo/slot4.prop","text"));
        
        exec("sync");
        
        ini_set("text_next", "Next >");
        
        back("999");
    endif;
endif;



########################################
##### ABOUT
########################################

if prop("systemselect.prop","selected")=="6" then
    textbox(
        "Turbo Kernel",
        "Information, credits and thanks",
        "@cosmicdan",
        resread("about.txt")
    );
    back("2");
endif;



########################################
##### SLOT CREATE
########################################

setvar("exec_buffer", "");
exec("/sbin/turbo_helper.sh", "checkslot", getvar("currentslot"));
if getvar("exec_buffer") == "1\n"
then
    selectbox(
        "Slot " + getvar("currentslot") + " is empty",
        "This slot is empty and must be set up. On the next page you will be able to select custom sizes.",
        "@disk",
        "slottask.prop",
        "System",             "",                                                                    2,   # selected.1
        "Blank",              "System partition will be created blank (faster).",                    1,
        "Copy from internal", "System partition will be a duplicate of the current internal one.",   0,
        "Userdata",           "",                                                                    2,   # selected.2
        "Blank",              "Userdata partition will be created blank (faster).",                  1,
        "Copy from internal", "Userdata partition will be a duplicate of the current internal one.", 0
    );
    
    selectbox(
        "Slot " + getvar("currentslot") + " - Images",
        "Select your desired image sizes. Custom image sizes are used at your own risk, and may produce Recovery backups incompatible with other slots.",
        "@disk",
        "slotsizes.prop",
        "System",             "",                                                                     2,   # selected.1
        "Same as Internal",   "Create system with the same size as Internal (recommended)",           1,
        "420MB",              "System partition will be 420MB (stock-like)",                          0,
        "640MB",              "System partition will be 640MB (huge)",                                0,
        "Userdata",           "WARNING - The larger the image, the longer the slot creation will take.",  2,   # selected.2
        "Same as Internal",   "Create userdata with the same size as Internal (recommended)",         1,
        "320MB",              "Userdata will be 320MB (smaller, stock-like)",                         0,
        "640MB",              "Userdata will be 700MB (larger)",                                      0,
        "1024MB",             "Userdata will be 1024MB (huge)",                                       0,
        "1600MB",             "Userdata will be 1600MB (massive)",                                    0,
        "2800MB",             "Userdata will be 2800MB (U CRAZY?)",                                   0
    );

    if prop("slotsizes.prop","selected.1")=="1" then
        exec("/sbin/turbo_helper.sh", "checkcapacity", "mtdblock0");
        writetmpfile("systemsize.prop", "size=" + prop("tmp.prop","tmp") + "\n");
    endif;
    if prop("slotsizes.prop","selected.1")=="2" then
        writetmpfile("systemsize.prop","size=430080\n");
    endif;
    if prop("slotsizes.prop","selected.1")=="3" then
        writetmpfile("systemsize.prop","size=655360\n");
    endif;
    if prop("slotsizes.prop","selected.2")=="1" then
        exec("/sbin/turbo_helper.sh", "checkcapacity", "mtdblock1");
        writetmpfile("userdatasize.prop", "size=" + prop("tmp.prop","tmp") + "\n");
    endif;
    if prop("slotsizes.prop","selected.2")=="2" then
        writetmpfile("userdatasize.prop","size=327680\n");
    endif;
    if prop("slotsizes.prop","selected.2")=="3" then
        writetmpfile("userdatasize.prop","size=716800\n");
    endif;
    if prop("slotsizes.prop","selected.2")=="4" then
        writetmpfile("userdatasize.prop","size=1048576\n");
        alert("WARNING","You have selected the userdata size of 1024MB. This will take a long time to complete. It is recommended to plug your charger in NOW.", "@warning");
    endif;
    if prop("slotsizes.prop","selected.2")=="5" then
        writetmpfile("userdatasize.prop","size=1638400\n");
        alert("WARNING","You have selected the userdata size of 1600MB. This will take a VERY long time to complete. It is recommended to plug your charger in NOW.", "@warning");
    endif;
    if prop("slotsizes.prop","selected.2")=="6" then
        writetmpfile("userdatasize.prop","size=2867200\n");
        alert("WARNING","You have selected the userdata size of 2800MB. This will take an EXTREMELY long time to complete. It is recommended to plug your charger in NOW.", "@warning");
    endif;

    exec("/sbin/turbo_helper.sh", "checkfree", "/sdcard", prop("systemsize.prop","size"), prop("userdatasize.prop","size"));
    writetmpfile("sdcardfree.prop", "free=" + prop("tmp.prop","tmp") + "\n");
    
    if cmp(prop("sdcardfree.prop", "free"), "<", "0") then
        alert("Error","Your SDCard has insufficient space for the requested image sizes.\n\n" +
            "You need " + cal(prop("sdcardfree.prop", "free"), "/", "-1024") + "MB more for these sizes.",
        "@disk");
        back("999");
    endif;
    
    viewbox(
        "Slot " + getvar("currentslot") + " Setup",
        "This slot will now be set up based on your options.\n\n" +
            "System size:     " + "\n\t" + cal(prop("systemsize.prop","size"),   "/", "1024") + "MB\n" +
            "Userdata size:   " + "\n\t" + cal(prop("userdatasize.prop","size"), "/", "1024") + "MB\n" +
            "SDCard remaining:" + "\n\t" + cal(prop("sdcardfree.prop", "free"),  "/", "1024") + "MB\n" +
            "\n" +
            "Note that this could take anywhere from five to twenty minutes, especially if you have a slow SDCard or are creating/copying a large system or userdata image.\n\n" + 
            "If it creates a bad image you cannot boot from, please pull battery and check your SDCard for errors via the Repair option in Tools, *then* Delete the Slot and try again.",
        "@disk"
    );
    
    writetmpfile(
        "doslot.prop",
        "slot=" + getvar("currentslot") + "\n"
    );
    if prop("slottask.prop","selected.1")=="2" then
        writetmpfile(
            "copysystem.prop",
            "do=yes\n"
        );
    else
        writetmpfile(
            "copysystem.prop",
            "do=no\n"
        );
    endif;
    if prop("slottask.prop","selected.2")=="2" then
        writetmpfile(
            "copyuserdata.prop",
            "do=yes\n"
        );
    else
        writetmpfile(
            "copyuserdata.prop",
            "do=no\n"
        );
    endif;
    
    writetmpfile("repairdo.prop", "do=no\n");
    
    ini_set("text_next", "Reboot");
    exec("sync");
    install(
        "Creating Slot " + getvar("currentslot"),
        "<b>Turbo Kernel</b> is now performing the slot creation.",
        "@cog",
        "All done! You can now boot and/or perform Recovery tasks on this slot.\n\n"+
        "<b>If you are not installing a Jellybean ROM in this Slot, be *sure* to change the Mode in the Slot Menu.</b>"
    );
    pleasewait("Synchronizing... WAIT!");
    exec("sync");
    exit("");
endif;

##########################


ini_set("force_colorspace", "argb");
